concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

on:
  push:
    branches:
      - main

name: Build for Android and Windows

jobs:
  build-android:
    name: Build Android APK
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install MAUI workload for Android
        run: dotnet workload install maui-android

      - name: Generate version number
        id: version
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $env:GITHUB_ENV

      - name: Update version in .csproj
        run: |
          (Get-Content YouTubeHelper.Mobile\YouTubeHelper.Mobile.csproj) -replace '<ApplicationDisplayVersion>.*?</ApplicationDisplayVersion>', "<ApplicationDisplayVersion>$env:VERSION</ApplicationDisplayVersion>" |
          Set-Content YouTubeHelper.Mobile\YouTubeHelper.Mobile.csproj

      - name: Add GitHub NuGet source
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/micahmo/index.json `
            --name GitHub_micahmo `
            --username micahmo `
            --password "${{ secrets.GH_NUGET_PAT }}" `
            --store-password-in-clear-text

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Android APK
        run: dotnet publish YouTubeHelper.Mobile/YouTubeHelper.Mobile.csproj -f net8.0-android -c Release -p:AndroidPackageFormat=apk

      - name: Decode keystore
        run: |
          $bytes = [System.Convert]::FromBase64String("${{ secrets.KEYSTORE_FILE_BASE64 }}")
          [IO.File]::WriteAllBytes("my-release-key.keystore", $bytes)
        shell: pwsh

      - name: Sign APK manually
        run: |
          $apkPath = "YouTubeHelper.Mobile\bin\Release\net8.0-android\com.micahmo.youtubehelper-Signed.apk"
          $signedApk = "YouTubeHelper.Mobile\bin\Release\net8.0-android\com.micahmo.youtubehelper-$env:VERSION.apk"

          & "${env:ANDROID_HOME}\build-tools\34.0.0\apksigner.bat" sign `
            --ks my-release-key.keystore `
            --ks-key-alias "${{ secrets.KEY_ALIAS }}" `
            --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} `
            --out $signedApk `
            $apkPath
        shell: pwsh

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: v1.0.${{ github.run_number }}
          files: YouTubeHelper.Mobile/bin/Release/net8.0-android/com.micahmo.youtubehelper-${{ env.VERSION }}.apk
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-desktop:
    name: Build Windows Installer
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Add GitHub NuGet source
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/micahmo/index.json `
            --name GitHub_micahmo `
            --username micahmo `
            --password "${{ secrets.GH_NUGET_PAT }}" `
            --store-password-in-clear-text

      - name: Restore dependencies
        run: dotnet restore

      - name: Build WPF Desktop App
        run: dotnet publish YouTubeHelper\YouTubeHelper.csproj -c Release -f net8.0-windows

      - name: Set VERSION env variable
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $env:GITHUB_ENV

      - name: Install Inno Setup
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile is.exe
          Start-Process .\is.exe -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait
        shell: pwsh

      - name: Build Installer (Inno Setup)
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" Installer\Setup.iss
        shell: pwsh

      - name: Update AppUpdate.xml in Gist
        run: |
          $version = "1.0.${{ github.run_number }}"
          $date = Get-Date -Format "yyyy-MM-dd"
          $downloadLink = "https://github.com/micahmo/YouTubeHelper/releases/download/v$version/YouTubeHelperSetup-$version.exe"
          $fileName = "WS4WSetup-$version.exe"

          $xmlContent = @"
          <?xml version="1.0" encoding="utf-8" ?>
          <AppUpdate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/micahmo/YouTubeHelper/refs/heads/main/Installer/AppUpdate.xsd">
            <Version>$version</Version>
            <ReleaseDate>$date</ReleaseDate>
            <DownloadLink>$downloadLink</DownloadLink>
            <DownloadFileName>$fileName</DownloadFileName>
            <VersionNotes></VersionNotes>
            <ReleaseNotes></ReleaseNotes>
          </AppUpdate>
          "@

          $body = @{
            files = @{
              "YouTubeHelperVersionInfo.xml" = @{
                content = $xmlContent
              }
            }
          } | ConvertTo-Json -Depth 10

          $headers = @{
            Authorization = "token ${{ secrets.GIST_TOKEN }}"
            "Content-Type" = "application/json"
          }

          Invoke-RestMethod -Uri "https://api.github.com/gists/2f8966f2a9acbc8d11d70d69dc75c34c" `
                            -Method PATCH `
                            -Headers $headers `
                            -Body $body
        shell: pwsh

      - name: Upload Installer to GitHub Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: v1.0.${{ github.run_number }}
          files: Installer/YouTubeHelperSetup-${{ env.VERSION }}.exe
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
